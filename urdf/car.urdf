<?xml version="1.0"?>
<robot name="lamboorgini">

  <!-- 

    car_body is directly connected to back wheels
    but,
      car_body is connected to a intermediate joint then that joint is connected to the front wheels
      this is so that the front wheels can revolute with that intermediate joint and,
      then the intermediate joint can be used to turn the wheel left and right

  -->

  <link name="car_body">
      <inertial>
        <origin xyz="0 0 1" rpy="0 0 0"/>
        <mass value="50.0"/>
        <inertia ixx="10.0" ixy="0" ixz="0" iyy="10" iyz="0" izz="10"/>
      </inertial>
      <collision>
        <origin xyz="0 0 1" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://project_car_urdf/assets/car.obj"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="0 0 1" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://project_car_urdf/assets/car.obj"/>
        </geometry>
      </visual>
  </link>

    <!-- front wheels -->

      <!-- front left wheel -->
        
        <link name="front_wheel_left_turn"> <!-- intermidiate link for turn -->
          <inertial>
            <mass value="5.0"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
          </inertial>
          <collision>
            <geometry>
              <box size="0.3 0.3 0.3"/>
            </geometry>
          </collision>
          <visual>
            <geometry>
              <box size="0.3 0.3 0.3"/>
              <!-- change this into disk brake so that it looks good and is actually contributing to the working of the urdf car -->
            </geometry>
          </visual>
        </link>

        <joint name="joint_car_to_front_wheel_left_turner" type="revolute">
          <origin xyz="-0.9 1.02 1.2"/>
          <parent link="car_body"/>
          <child link="front_wheel_left_turn"/>
          <axis xyz="0 0 1"/>
          <limit lower="-0.44" upper="0.44" effort="100" velocity="1.0"/>
        </joint>

        <link name="wheel_front_left"> <!-- actual wheel -->
          <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="5.0"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
          </inertial>
          <collision>
            <origin xyz="-0.18 0.0 0" rpy="0.0 1.5707 0.0"/>
            <geometry>
              <cylinder radius="0.46" length="0.3"/>
            </geometry>
          </collision>
          <visual>
            <!-- manipulating the origin xyz in the visual block offsets the mesh from the origin  -->
            <origin xyz="0.0 0.0 0.0"/>
            <geometry>
                <mesh filename="package://project_car_urdf/assets/wheel.obj"/>
            </geometry>
          </visual>
        </link>

        <joint name="joint_car_to_left_turner_to_wheel_front_left" type="continuous">
          <origin xyz="-0.0 0.0 0.0"/>
          <parent link="front_wheel_left_turn"/>
          <child link="wheel_front_left"/>
          <axis xyz="1 0 0"/>
        </joint>

    <!-- end of front left wheel -->

    <!-- front right wheel -->
    
      <link name="front_wheel_right_turn"> <!-- intermidiate link for turn -->
        <inertial>
          <mass value="5.0"/>
          <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
        <collision>
          <geometry>
            <box size="0.3 0.3 0.3"/>
          </geometry>
        </collision>
        <visual>
          <geometry>
            <box size="0.3 0.3 0.3"/>
            <!-- change this into disk brake so that it looks good and is actually contributing to the working of the urdf car -->
          </geometry>
        </visual>
      </link>

      <joint name="joint_car_to_front_right_turner" type="revolute">
        <origin xyz="+0.9 1.02 1.2"/>
        <parent link="car_body"/>
        <child link="front_wheel_right_turn"/>
        <limit lower="-0.44" upper="0.44" effort="100" velocity="1.0"/>
        <axis xyz="0 0 1"/>
        <mimic joint="joint_car_to_front_wheel_left_turner" />
      </joint>

      <link name="wheel_front_right"> <!-- actual wheel -->
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="5.0"/>
          <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
        <collision>
          <origin xyz="0.18 0.0 0.0" rpy="0.0 1.5707 0.0"/>
          <geometry>
            <cylinder radius="0.46" length="0.3"/>
          </geometry>
        </collision>
        <visual>
          <!-- manipulating the origin xyz in the visual block offsets the mesh from the origin  -->
          <origin xyz="0.0 0.0 0.0" rpy="0 0 3.14"/>
          <geometry>
              <mesh filename="package://project_car_urdf/assets/wheel.obj"/>
          </geometry>
        </visual>
      </link>

      <joint name="joint_car_right_turner_to_wheel_front_right" type="continuous">
        <origin xyz="+0.0 0.0 0.0"/>
        <parent link="front_wheel_right_turn"/>
        <child link="wheel_front_right"/>
        <axis xyz="1 0 0"/>
      </joint>

    <!-- end of front left wheel -->

  <!-- end of front wheels -->

  <!-- back wheels -->

    <!-- back wheel left -->
      <link name="wheel_rear_left">
        <inertial>
          <mass value="5.0"/>
          <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
        <collision>
          <origin xyz="-0.18 0.0 0.0" rpy="0.0 1.5707 0.0"/>
          <geometry>
            <cylinder radius="0.46" length="0.3"/>
          </geometry>
        </collision>
        <visual>
          <geometry>
            <mesh filename="package://project_car_urdf/assets/wheel.obj"/>
          </geometry>
        </visual>
      </link>

      <joint name="joint_car_to_rear_wheel_left" type="continuous">
        <parent link="car_body"/>
        <child link="wheel_rear_left"/>
        <axis xyz="1 0 0"/>
        <origin xyz="-0.9 -1.05 1.2"/>
      </joint>
    <!-- end of back wheel left -->

    <!-- back wheel right -->

    <link name="wheel_rear_right">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 3.14"/>
        <mass value="5.0"/>
        <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
      </inertial>
      <collision>
        <origin xyz="0.18 0 0" rpy="0 1.5707 3.14"/>
        <geometry>
          <cylinder radius="0.46" length="0.3"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0.0 0.0 3.14"/>
        <geometry>
            <mesh filename="package://project_car_urdf/assets/wheel.obj"/>
        </geometry>
      </visual>
    </link>

    <joint name="joint_car_to_rear_wheel_right" type="continuous">
      <parent link="car_body"/>
      <child link="wheel_rear_right"/>
      <axis xyz="1 0 0"/>
      <origin xyz="+0.9 -1.05 1.2"/>
      <mimic joint="joint_car_to_rear_wheel_left"/>
    </joint>

    <!-- end of back wheel right -->

  <!-- back wheel -->

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 1.2 2" rpy="0 0 1.5707"/>
    <parent link="car_body"/>
    <child link="camera_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

    <!-- camera -->
    <gazebo reference="camera_link">
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>lamboorgini/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

</robot>